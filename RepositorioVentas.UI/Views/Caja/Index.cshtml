@model RepositorioVentas.UI.Models.AcumuladoCaja
@Html.ValidationSummary()

@{
    ViewData["Title"] = "Caja";
}

<h1>Caja</h1>

<style>
    dt, dd {
        margin-right: 10px; /* Espacio horizontal entre atributo y dato */
    }
</style>

<div>
    <h4>Acumulado</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.FechaDeInicio)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.FechaDeInicio)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Efectivo)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Efectivo)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Tarjeta)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Tarjeta)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.SINPEMovil)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.SINPEMovil)
        </dd>
        @*
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Activo)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Activo)
        </dd>
        *@
    </dl>
</div>
<div>
    @if (Model.Activo == false)
    {

        <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("AbrirCaja", new { /* id = Model.PrimaryKey */ })'">Abrir Caja</button>
        
    }else{

        <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("CerrarCaja", new { /* id = Model.PrimaryKey */ })'">Cerrar Caja</button>
        <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("IndexVenta", new { /* id = Model.PrimaryKey */ })'">Registrar Venta</button>
    }

</div>
